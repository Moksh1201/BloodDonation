{"ast":null,"code":"var _jsxFileName = \"/Users/mokshm/Desktop/Projects/Blood Donation/frontend/src/components/Recipients.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import './Recipients.css';\n// import { getRecipients, getRecipientById, createRecipient, updateRecipient, deleteRecipient } from '../services/recipientService';\n\n// const Recipients = () => {\n//   const [recipients, setRecipients] = useState([]);\n//   const [recipient, setRecipient] = useState(null);\n//   const [id, setId] = useState('');\n//   const [newRecipient, setNewRecipient] = useState({ name: '', bloodType: '', location: '' });\n//   const [updateData, setUpdateData] = useState({ id: '', name: '', location: '' });\n//   const [deleteId, setDeleteId] = useState('');\n//   const [isCreating, setIsCreating] = useState(false);\n//   const [isUpdating, setIsUpdating] = useState(false);\n//   const [isDeleting, setIsDeleting] = useState(false);\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     fetchRecipients();\n//   }, []);\n\n//   const fetchRecipients = async () => {\n//     try {\n//       const response = await getRecipients();\n//       setRecipients(response.data);\n//     } catch (error) {\n//       console.error('Error fetching recipients:', error);\n//     }\n//   };\n\n//   const fetchRecipientById = async (id) => {\n//     try {\n//       const response = await getRecipientById(id);\n//       setRecipient(response.data);\n//       setUpdateData({ id: response.data.id, name: response.data.name, location: response.data.location });\n//       setError('');\n//     } catch (error) {\n//       console.error('Error fetching recipient by ID:', error);\n//       setError('Recipient not found');\n//     }\n//   };\n\n//   const handleGetById = () => {\n//     fetchRecipientById(id);\n//   };\n\n//   const handleCreate = async () => {\n//     try {\n//       await createRecipient(newRecipient);\n//       fetchRecipients();\n//       setNewRecipient({ name: '', bloodType: '', location: '' });\n//       setIsCreating(false);\n//     } catch (error) {\n//       console.error('Error creating recipient:', error);\n//     }\n//   };\n\n//   const handleUpdate = async () => {\n//     if (window.confirm('Are you sure you want to update this recipient?')) {\n//       try {\n//         await updateRecipient(updateData.id, { name: updateData.name, location: updateData.location });\n//         fetchRecipients();\n//         setUpdateData({ id: '', name: '', location: '' ,bloodType: ''});\n//         setIsUpdating(false);\n//       } catch (error) {\n//         console.error('Error updating recipient:', error);\n//       }\n//     }\n//   };\n\n//   const handleDelete = async () => {\n//     if (window.confirm('Are you sure you want to delete this recipient?')) {\n//       try {\n//         await deleteRecipient(deleteId);\n//         fetchRecipients();\n//         setDeleteId('');\n//         setIsDeleting(false);\n//       } catch (error) {\n//         console.error('Error deleting recipient:', error);\n//       }\n//     }\n//   };\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setUpdateData({ ...updateData, [name]: value });\n//   };\n\n//   const handleNewInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewRecipient({ ...newRecipient, [name]: value });\n//   };\n\n//   return (\n//     <div className=\"recipients-container\">\n//       <h1>Manage Recipients</h1>\n\n//       {/* Fetch Recipient By ID */}\n//       <div className=\"fetch-recipient\">\n//         <input type=\"text\" value={id} onChange={(e) => setId(e.target.value)} placeholder=\"Enter ID\" />\n//         <button onClick={handleGetById}>Get Recipient By ID</button>\n//       </div>\n//       {error && <p className=\"error-message\">{error}</p>}\n\n//       {/* Create New Recipient */}\n//       <div className=\"create-recipient\">\n//         <button onClick={() => setIsCreating(true)}>Create New Recipient</button>\n//         {isCreating && (\n//           <div className=\"form-container\">\n//             <h2>Add New Recipient</h2>\n//             <input\n//               type=\"text\"\n//               name=\"name\"\n//               value={newRecipient.name}\n//               onChange={handleNewInputChange}\n//               placeholder=\"Recipient Name\"\n//             />\n//             <input\n//               type=\"text\"\n//               name=\"bloodType\"\n//               value={newRecipient.bloodType}\n//               onChange={handleNewInputChange}\n//               placeholder=\"Recipient Blood Type\"\n//             />\n//             <input\n//               type=\"text\"\n//               name=\"location\"\n//               value={newRecipient.location}\n//               onChange={handleNewInputChange}\n//               placeholder=\"Recipient Location\"\n//             />\n//             <button onClick={handleCreate}>Add Recipient</button>\n//           </div>\n//         )}\n//       </div>\n\n//       {/* List and Update/Delete Recipients */}\n//       <div className=\"recipients-list\">\n//         <h2>All Recipients</h2>\n//         {recipients.map((recipient) => (\n//           <div className=\"recipient-card\" key={recipient.id}>\n//             <h3>{recipient.name}</h3>\n//             <p>Blood Type: {recipient.bloodType}</p>\n//             <p>Location: {recipient.location}</p>\n//             <button onClick={() => {\n//               setIsUpdating(true);\n//               setUpdateData({ id: recipient.id, name: recipient.name, location: recipient.location });\n//             }}>Update</button>\n//             <button onClick={() => {\n//               setIsDeleting(true);\n//               setDeleteId(recipient.id);\n//             }}>Delete</button>\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Update Recipient */}\n//       {isUpdating && (\n//         <div className=\"update-recipient\">\n//           <h2>Update Recipient</h2>\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             value={updateData.name}\n//             onChange={handleInputChange}\n//             placeholder=\"Update Name\"\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"location\"\n//             value={updateData.location}\n//             onChange={handleInputChange}\n//             placeholder=\"Update Location\"\n//           />\n//            <input\n//             type=\"text\"\n//             name=\"bloodType\"\n//             value={updateData.bloodType}\n//             onChange={handleInputChange}\n//             placeholder=\"Update Bloodgroup\"\n//           />\n//           <button onClick={handleUpdate}>Update</button>\n//         </div>\n//       )}\n\n//       {/* Delete Recipient */}\n//       {isDeleting && (\n//         <div className=\"delete-recipient\">\n//           <h2>Delete Recipient</h2>\n//           <input\n//             type=\"text\"\n//             value={deleteId}\n//             onChange={(e) => setDeleteId(e.target.value)}\n//             placeholder=\"Enter ID to Delete\"\n//           />\n//           <button onClick={handleDelete}>Delete</button>\n//         </div>\n//       )}\n\n//       {/* Recipient Details */}\n//       {recipient && (\n//         <div className=\"recipient-details\">\n//           <h2>Recipient Details</h2>\n//           <p>ID: {recipient.id}</p>\n//           <p>Name: {recipient.name}</p>\n//           <p>Blood Type: {recipient.bloodType}</p>\n//           <p>Location: {recipient.location}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Recipients;\n\nimport React, { useState, useEffect } from 'react';\nimport './Recipients.css';\nimport { getRecipients, getRecipientById, createRecipient, updateRecipient, deleteRecipient } from '../services/recipientService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recipients = () => {\n  _s();\n  const [recipients, setRecipients] = useState([]);\n  const [recipient, setRecipient] = useState(null);\n  const [id, setId] = useState('');\n  const [newRecipient, setNewRecipient] = useState({\n    name: '',\n    bloodType: '',\n    location: ''\n  });\n  const [updateData, setUpdateData] = useState({\n    id: '',\n    name: '',\n    location: '',\n    bloodType: ''\n  });\n  const [deleteId, setDeleteId] = useState('');\n  const [isCreating, setIsCreating] = useState(false);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetchRecipients();\n  }, []);\n  const fetchRecipients = async () => {\n    try {\n      const response = await getRecipients();\n      setRecipients(response.data);\n    } catch (error) {\n      console.error('Error fetching recipients:', error);\n    }\n  };\n  const fetchRecipientById = async id => {\n    try {\n      const response = await getRecipientById(id);\n      setRecipient(response.data);\n      setUpdateData({\n        id: response.data.id,\n        name: response.data.name,\n        location: response.data.location,\n        bloodType: response.data.bloodType\n      });\n      setError('');\n    } catch (error) {\n      console.error('Error fetching recipient by ID:', error);\n      setError('Recipient not found');\n    }\n  };\n  const handleGetById = () => {\n    fetchRecipientById(id);\n  };\n  const handleCreate = async () => {\n    try {\n      await createRecipient(newRecipient);\n      fetchRecipients();\n      setNewRecipient({\n        name: '',\n        bloodType: '',\n        location: ''\n      });\n      setIsCreating(false);\n    } catch (error) {\n      console.error('Error creating recipient:', error);\n    }\n  };\n  const handleUpdate = async () => {\n    if (window.confirm('Are you sure you want to update this recipient?')) {\n      try {\n        await updateRecipient(updateData.id, {\n          name: updateData.name,\n          location: updateData.location,\n          bloodType: updateData.bloodType\n        });\n        fetchRecipients();\n        setUpdateData({\n          id: '',\n          name: '',\n          location: '',\n          bloodType: ''\n        });\n        setIsUpdating(false);\n      } catch (error) {\n        console.error('Error updating recipient:', error);\n      }\n    }\n  };\n  const handleDelete = async () => {\n    if (window.confirm('Are you sure you want to delete this recipient?')) {\n      try {\n        await deleteRecipient(deleteId);\n        fetchRecipients();\n        setDeleteId('');\n        setIsDeleting(false);\n      } catch (error) {\n        console.error('Error deleting recipient:', error);\n      }\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUpdateData({\n      ...updateData,\n      [name]: value\n    });\n  };\n  const handleNewInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewRecipient({\n      ...newRecipient,\n      [name]: value\n    });\n  };\n  const closePopup = () => {\n    setIsCreating(false);\n    setIsUpdating(false);\n    setIsDeleting(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipients-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manage Recipients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fetch-recipient\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: id,\n          onChange: e => setId(e.target.value),\n          placeholder: \"Enter ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGetById,\n          children: \"Get Recipient By ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-recipient\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsCreating(true),\n          children: \"Create New Recipient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), isCreating && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Add New Recipient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close-button\",\n              onClick: closePopup,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: newRecipient.name,\n            onChange: handleNewInputChange,\n            placeholder: \"Recipient Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"bloodType\",\n            value: newRecipient.bloodType,\n            onChange: handleNewInputChange,\n            placeholder: \"Recipient Blood Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"location\",\n            value: newRecipient.location,\n            onChange: handleNewInputChange,\n            placeholder: \"Recipient Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCreate,\n            children: \"Add Recipient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipients-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"All Recipients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"recipients-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Blood Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: recipients.map(recipient => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: recipient.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: recipient.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: recipient.bloodType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: recipient.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit-button\",\n                onClick: () => {\n                  setIsUpdating(true);\n                  setUpdateData({\n                    id: recipient.id,\n                    name: recipient.name,\n                    location: recipient.location,\n                    bloodType: recipient.bloodType\n                  });\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-button\",\n                onClick: () => {\n                  setIsDeleting(true);\n                  setDeleteId(recipient.id);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this)]\n          }, recipient.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this), isUpdating && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"update-recipient form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Update Recipient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: closePopup,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: updateData.name,\n        onChange: handleInputChange,\n        placeholder: \"Update Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"location\",\n        value: updateData.location,\n        onChange: handleInputChange,\n        placeholder: \"Update Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"bloodType\",\n        value: updateData.bloodType,\n        onChange: handleInputChange,\n        placeholder: \"Update Blood Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 9\n    }, this), isDeleting && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"delete-recipient form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Delete Recipient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: closePopup,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: deleteId,\n        onChange: e => setDeleteId(e.target.value),\n        placeholder: \"Enter ID to Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 9\n    }, this), recipient && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipient-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recipient Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", recipient.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", recipient.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Blood Type: \", recipient.bloodType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Location: \", recipient.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 338,\n    columnNumber: 5\n  }, this);\n};\n_s(Recipients, \"jrkT5TtDKRjnLViUgu/HyE1K4gs=\");\n_c = Recipients;\nexport default Recipients;\nvar _c;\n$RefreshReg$(_c, \"Recipients\");","map":{"version":3,"names":["React","useState","useEffect","getRecipients","getRecipientById","createRecipient","updateRecipient","deleteRecipient","jsxDEV","_jsxDEV","Recipients","_s","recipients","setRecipients","recipient","setRecipient","id","setId","newRecipient","setNewRecipient","name","bloodType","location","updateData","setUpdateData","deleteId","setDeleteId","isCreating","setIsCreating","isUpdating","setIsUpdating","isDeleting","setIsDeleting","error","setError","fetchRecipients","response","data","console","fetchRecipientById","handleGetById","handleCreate","handleUpdate","window","confirm","handleDelete","handleInputChange","e","value","target","handleNewInputChange","closePopup","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","map","_c","$RefreshReg$"],"sources":["/Users/mokshm/Desktop/Projects/Blood Donation/frontend/src/components/Recipients.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import './Recipients.css';\n// import { getRecipients, getRecipientById, createRecipient, updateRecipient, deleteRecipient } from '../services/recipientService';\n\n// const Recipients = () => {\n//   const [recipients, setRecipients] = useState([]);\n//   const [recipient, setRecipient] = useState(null);\n//   const [id, setId] = useState('');\n//   const [newRecipient, setNewRecipient] = useState({ name: '', bloodType: '', location: '' });\n//   const [updateData, setUpdateData] = useState({ id: '', name: '', location: '' });\n//   const [deleteId, setDeleteId] = useState('');\n//   const [isCreating, setIsCreating] = useState(false);\n//   const [isUpdating, setIsUpdating] = useState(false);\n//   const [isDeleting, setIsDeleting] = useState(false);\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     fetchRecipients();\n//   }, []);\n\n//   const fetchRecipients = async () => {\n//     try {\n//       const response = await getRecipients();\n//       setRecipients(response.data);\n//     } catch (error) {\n//       console.error('Error fetching recipients:', error);\n//     }\n//   };\n\n//   const fetchRecipientById = async (id) => {\n//     try {\n//       const response = await getRecipientById(id);\n//       setRecipient(response.data);\n//       setUpdateData({ id: response.data.id, name: response.data.name, location: response.data.location });\n//       setError('');\n//     } catch (error) {\n//       console.error('Error fetching recipient by ID:', error);\n//       setError('Recipient not found');\n//     }\n//   };\n\n//   const handleGetById = () => {\n//     fetchRecipientById(id);\n//   };\n\n//   const handleCreate = async () => {\n//     try {\n//       await createRecipient(newRecipient);\n//       fetchRecipients();\n//       setNewRecipient({ name: '', bloodType: '', location: '' });\n//       setIsCreating(false);\n//     } catch (error) {\n//       console.error('Error creating recipient:', error);\n//     }\n//   };\n\n//   const handleUpdate = async () => {\n//     if (window.confirm('Are you sure you want to update this recipient?')) {\n//       try {\n//         await updateRecipient(updateData.id, { name: updateData.name, location: updateData.location });\n//         fetchRecipients();\n//         setUpdateData({ id: '', name: '', location: '' ,bloodType: ''});\n//         setIsUpdating(false);\n//       } catch (error) {\n//         console.error('Error updating recipient:', error);\n//       }\n//     }\n//   };\n\n//   const handleDelete = async () => {\n//     if (window.confirm('Are you sure you want to delete this recipient?')) {\n//       try {\n//         await deleteRecipient(deleteId);\n//         fetchRecipients();\n//         setDeleteId('');\n//         setIsDeleting(false);\n//       } catch (error) {\n//         console.error('Error deleting recipient:', error);\n//       }\n//     }\n//   };\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setUpdateData({ ...updateData, [name]: value });\n//   };\n\n//   const handleNewInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewRecipient({ ...newRecipient, [name]: value });\n//   };\n\n//   return (\n//     <div className=\"recipients-container\">\n//       <h1>Manage Recipients</h1>\n      \n//       {/* Fetch Recipient By ID */}\n//       <div className=\"fetch-recipient\">\n//         <input type=\"text\" value={id} onChange={(e) => setId(e.target.value)} placeholder=\"Enter ID\" />\n//         <button onClick={handleGetById}>Get Recipient By ID</button>\n//       </div>\n//       {error && <p className=\"error-message\">{error}</p>}\n      \n//       {/* Create New Recipient */}\n//       <div className=\"create-recipient\">\n//         <button onClick={() => setIsCreating(true)}>Create New Recipient</button>\n//         {isCreating && (\n//           <div className=\"form-container\">\n//             <h2>Add New Recipient</h2>\n//             <input\n//               type=\"text\"\n//               name=\"name\"\n//               value={newRecipient.name}\n//               onChange={handleNewInputChange}\n//               placeholder=\"Recipient Name\"\n//             />\n//             <input\n//               type=\"text\"\n//               name=\"bloodType\"\n//               value={newRecipient.bloodType}\n//               onChange={handleNewInputChange}\n//               placeholder=\"Recipient Blood Type\"\n//             />\n//             <input\n//               type=\"text\"\n//               name=\"location\"\n//               value={newRecipient.location}\n//               onChange={handleNewInputChange}\n//               placeholder=\"Recipient Location\"\n//             />\n//             <button onClick={handleCreate}>Add Recipient</button>\n//           </div>\n//         )}\n//       </div>\n\n//       {/* List and Update/Delete Recipients */}\n//       <div className=\"recipients-list\">\n//         <h2>All Recipients</h2>\n//         {recipients.map((recipient) => (\n//           <div className=\"recipient-card\" key={recipient.id}>\n//             <h3>{recipient.name}</h3>\n//             <p>Blood Type: {recipient.bloodType}</p>\n//             <p>Location: {recipient.location}</p>\n//             <button onClick={() => {\n//               setIsUpdating(true);\n//               setUpdateData({ id: recipient.id, name: recipient.name, location: recipient.location });\n//             }}>Update</button>\n//             <button onClick={() => {\n//               setIsDeleting(true);\n//               setDeleteId(recipient.id);\n//             }}>Delete</button>\n//           </div>\n//         ))}\n//       </div>\n      \n//       {/* Update Recipient */}\n//       {isUpdating && (\n//         <div className=\"update-recipient\">\n//           <h2>Update Recipient</h2>\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             value={updateData.name}\n//             onChange={handleInputChange}\n//             placeholder=\"Update Name\"\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"location\"\n//             value={updateData.location}\n//             onChange={handleInputChange}\n//             placeholder=\"Update Location\"\n//           />\n//            <input\n//             type=\"text\"\n//             name=\"bloodType\"\n//             value={updateData.bloodType}\n//             onChange={handleInputChange}\n//             placeholder=\"Update Bloodgroup\"\n//           />\n//           <button onClick={handleUpdate}>Update</button>\n//         </div>\n//       )}\n      \n//       {/* Delete Recipient */}\n//       {isDeleting && (\n//         <div className=\"delete-recipient\">\n//           <h2>Delete Recipient</h2>\n//           <input\n//             type=\"text\"\n//             value={deleteId}\n//             onChange={(e) => setDeleteId(e.target.value)}\n//             placeholder=\"Enter ID to Delete\"\n//           />\n//           <button onClick={handleDelete}>Delete</button>\n//         </div>\n//       )}\n      \n//       {/* Recipient Details */}\n//       {recipient && (\n//         <div className=\"recipient-details\">\n//           <h2>Recipient Details</h2>\n//           <p>ID: {recipient.id}</p>\n//           <p>Name: {recipient.name}</p>\n//           <p>Blood Type: {recipient.bloodType}</p>\n//           <p>Location: {recipient.location}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Recipients;\n\nimport React, { useState, useEffect } from 'react';\nimport './Recipients.css';\nimport {\n  getRecipients,\n  getRecipientById,\n  createRecipient,\n  updateRecipient,\n  deleteRecipient,\n} from '../services/recipientService';\n\nconst Recipients = () => {\n  const [recipients, setRecipients] = useState([]);\n  const [recipient, setRecipient] = useState(null);\n  const [id, setId] = useState('');\n  const [newRecipient, setNewRecipient] = useState({\n    name: '',\n    bloodType: '',\n    location: '',\n  });\n  const [updateData, setUpdateData] = useState({\n    id: '',\n    name: '',\n    location: '',\n    bloodType: '',\n  });\n  const [deleteId, setDeleteId] = useState('');\n  const [isCreating, setIsCreating] = useState(false);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    fetchRecipients();\n  }, []);\n\n  const fetchRecipients = async () => {\n    try {\n      const response = await getRecipients();\n      setRecipients(response.data);\n    } catch (error) {\n      console.error('Error fetching recipients:', error);\n    }\n  };\n\n  const fetchRecipientById = async (id) => {\n    try {\n      const response = await getRecipientById(id);\n      setRecipient(response.data);\n      setUpdateData({\n        id: response.data.id,\n        name: response.data.name,\n        location: response.data.location,\n        bloodType: response.data.bloodType,\n      });\n      setError('');\n    } catch (error) {\n      console.error('Error fetching recipient by ID:', error);\n      setError('Recipient not found');\n    }\n  };\n\n  const handleGetById = () => {\n    fetchRecipientById(id);\n  };\n\n  const handleCreate = async () => {\n    try {\n      await createRecipient(newRecipient);\n      fetchRecipients();\n      setNewRecipient({ name: '', bloodType: '', location: '' });\n      setIsCreating(false);\n    } catch (error) {\n      console.error('Error creating recipient:', error);\n    }\n  };\n\n  const handleUpdate = async () => {\n    if (window.confirm('Are you sure you want to update this recipient?')) {\n      try {\n        await updateRecipient(updateData.id, {\n          name: updateData.name,\n          location: updateData.location,\n          bloodType: updateData.bloodType,\n        });\n        fetchRecipients();\n        setUpdateData({ id: '', name: '', location: '', bloodType: '' });\n        setIsUpdating(false);\n      } catch (error) {\n        console.error('Error updating recipient:', error);\n      }\n    }\n  };\n\n  const handleDelete = async () => {\n    if (window.confirm('Are you sure you want to delete this recipient?')) {\n      try {\n        await deleteRecipient(deleteId);\n        fetchRecipients();\n        setDeleteId('');\n        setIsDeleting(false);\n      } catch (error) {\n        console.error('Error deleting recipient:', error);\n      }\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setUpdateData({ ...updateData, [name]: value });\n  };\n\n  const handleNewInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewRecipient({ ...newRecipient, [name]: value });\n  };\n\n  const closePopup = () => {\n    setIsCreating(false);\n    setIsUpdating(false);\n    setIsDeleting(false);\n  };\n\n  return (\n    <div className=\"recipients-container\">\n      <h1>Manage Recipients</h1>\n\n      {/* Fetch Recipient By ID */}\n      <div className=\"action-section\">\n        <div className=\"fetch-recipient\">\n          <input\n            type=\"text\"\n            value={id}\n            onChange={(e) => setId(e.target.value)}\n            placeholder=\"Enter ID\"\n          />\n          <button onClick={handleGetById}>Get Recipient By ID</button>\n        </div>\n\n        {/* Create New Recipient */}\n        <div className=\"create-recipient\">\n          <button onClick={() => setIsCreating(true)}>Create New Recipient</button>\n          {isCreating && (\n            <div className=\"form-container\">\n              <div className=\"popup-header\">\n                <h2>Add New Recipient</h2>\n                <button className=\"close-button\" onClick={closePopup}>\n                  &times;\n                </button>\n              </div>\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={newRecipient.name}\n                onChange={handleNewInputChange}\n                placeholder=\"Recipient Name\"\n              />\n              <input\n                type=\"text\"\n                name=\"bloodType\"\n                value={newRecipient.bloodType}\n                onChange={handleNewInputChange}\n                placeholder=\"Recipient Blood Type\"\n              />\n              <input\n                type=\"text\"\n                name=\"location\"\n                value={newRecipient.location}\n                onChange={handleNewInputChange}\n                placeholder=\"Recipient Location\"\n              />\n              <button onClick={handleCreate}>Add Recipient</button>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {error && <p className=\"error-message\">{error}</p>}\n\n      {/* List and Update/Delete Recipients */}\n      <div className=\"recipients-list\">\n        <h2>All Recipients</h2>\n        <table className=\"recipients-table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Blood Type</th>\n              <th>Location</th>\n              <th>Edit</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n          <tbody>\n            {recipients.map((recipient) => (\n              <tr key={recipient.id}>\n                <td>{recipient.id}</td>\n                <td>{recipient.name}</td>\n                <td>{recipient.bloodType}</td>\n                <td>{recipient.location}</td>\n                <td>\n                  <button\n                    className=\"edit-button\"\n                    onClick={() => {\n                      setIsUpdating(true);\n                      setUpdateData({\n                        id: recipient.id,\n                        name: recipient.name,\n                        location: recipient.location,\n                        bloodType: recipient.bloodType,\n                      });\n                    }}\n                  >\n                    Edit\n                  </button>\n                </td>\n                <td>\n                  <button\n                    className=\"delete-button\"\n                    onClick={() => {\n                      setIsDeleting(true);\n                      setDeleteId(recipient.id);\n                    }}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Update Recipient */}\n      {isUpdating && (\n        <div className=\"update-recipient form-container\">\n          <div className=\"popup-header\">\n            <h2>Update Recipient</h2>\n            <button className=\"close-button\" onClick={closePopup}>\n              &times;\n            </button>\n          </div>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={updateData.name}\n            onChange={handleInputChange}\n            placeholder=\"Update Name\"\n          />\n          <input\n            type=\"text\"\n            name=\"location\"\n            value={updateData.location}\n            onChange={handleInputChange}\n            placeholder=\"Update Location\"\n          />\n          <input\n            type=\"text\"\n            name=\"bloodType\"\n            value={updateData.bloodType}\n            onChange={handleInputChange}\n            placeholder=\"Update Blood Type\"\n          />\n          <button onClick={handleUpdate}>Update</button>\n        </div>\n      )}\n\n      {/* Delete Recipient */}\n      {isDeleting && (\n        <div className=\"delete-recipient form-container\">\n          <div className=\"popup-header\">\n            <h2>Delete Recipient</h2>\n            <button className=\"close-button\" onClick={closePopup}>\n              &times;\n            </button>\n          </div>\n          <input\n            type=\"text\"\n            value={deleteId}\n            onChange={(e) => setDeleteId(e.target.value)}\n            placeholder=\"Enter ID to Delete\"\n          />\n          <button onClick={handleDelete}>Delete</button>\n        </div>\n      )}\n\n      {/* Recipient Details */}\n      {recipient && (\n        <div className=\"recipient-details\">\n          <h2>Recipient Details</h2>\n          <p>ID: {recipient.id}</p>\n          <p>Name: {recipient.name}</p>\n          <p>Blood Type: {recipient.bloodType}</p>\n          <p>Location: {recipient.location}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Recipients;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,kBAAkB;AACzB,SACEC,aAAa,EACbC,gBAAgB,EAChBC,eAAe,EACfC,eAAe,EACfC,eAAe,QACV,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}